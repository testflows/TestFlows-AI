name: 🦾 OmniParser docker image
run-name: ${{ github.actor }} is buiding OmniParser docker image 🚀
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag"
        default: latest
        required: false
      omniparser_commit:
        description: "https://github.com/microsoft/OmniParser repo commit"
        default: a14c4010ebd91aae83a240badadc9e5721aaf0c8
        required: false
      omniparser_weights_commit:
        description: "https://huggingface.co/microsoft/OmniParser model weights commit"
        default: 7652a5ac81645a48fbe69a8f70a6a2b523d25558
        required: false
jobs:
   build:
    name: ⚒️ Build
    runs-on: [self-hosted, type-cx32, image-x86-system-ubuntu-22.04]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Set up cache for OverlayFS
        id: cache
        uses: actions/cache@v3
        with:
          path: /overlay-cache
          key: ${{ runner.os }}-overlay-cache-${{ inputs.omniparser_commit }}-${{ inputs.omniparser_weights_commit }}
          restore-keys: |
            ${{ runner.os }}-omniparser-repo-${{ inputs.omniparser_commit }}-${{ inputs.omniparser_weights_commit }}

      - name: Prepare OverlayFS
        run: |
          sudo mkdir -p /lower /upper /work /overlay-cache /merged
          sudo mount -t overlay -o lowerdir=/,upperdir=/upper,workdir=/work overlay /merged

      - name: Use Cached OverlayFS Changes
        if: steps.cache.outputs.cache-hit == 'true'
        run: sudo rsync -a /overlay-cache/ /upper/

      - name: Remove mirror.hetzner.com mirror
        run: |
           sudo grep -rl "mirror.hetzner.com" /etc/apt/ | xargs sudo sed -i '/mirror.hetzner.com/d'
           sudo apt-get update
           sudo bash -c 'cat <<EOF > /etc/apt/sources.list
           deb http://archive.ubuntu.com/ubuntu focal main restricted universe multiverse
           deb http://archive.ubuntu.com/ubuntu focal-updates main restricted universe multiverse
           deb http://archive.ubuntu.com/ubuntu focal-security main restricted universe multiverse
           EOF'

      - name: Install system dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged bash -c '
          apt-get update &&
          apt-get install -y \
            git \
            python3-pip \
            ca-certificates \
            curl \
            gnupg \
            lsb-release'

      - name: Add Docker’s official GPG key
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          mkdir -p /etc/apt/keyrings &&
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg'

      - name: Set up Docker repository
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null'

      - name: Install Docker
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          apt-get update &&
          apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin'

      - name: Verify Docker version
        run: docker --version

      - name: Add user to Docker group
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo usermod -aG docker $USER
          newgrp docker
    
      - name: Checkout OmniParser repository if no cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          git clone --depth=1 https://github.com/microsoft/OmniParser.git OmniParser/repo &&
          cd OmniParser/repo &&
          git fetch --depth=1 origin ${{ inputs.omniparser_commit }} &&
          git checkout ${{ inputs.omniparser_commit }}'

      - name: Install Hugging Face Hub
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          pip3 install huggingface_hub'

      - name: Download weights if no cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo chroot /merged /bin/bash -c '
          huggingface-cli download microsoft/OmniParser --revision ${{ inputs.omniparser_weights_commit }} --local-dir OmniParser/repo/weights &&
          echo "Delete blip2 to reduce space to fit 10GB cache limit" &&
          rm -rf OmniParser/repo/weights/icon_caption_blip2'

      - name: Build docker image
        run: |
          cd OmniParser
          docker build -t testflows/omniparser:${{ inputs.tag }} .

      - name: List docker images
        run: docker images

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "testflows" --password-stdin

      - name: Push Docker image
        run: docker push testflows/omniparser:${{ inputs.tag }}

      - name: Save OverlayFS Changes
        run: sudo cp -r /upper/* /overlay-cache


          
       
